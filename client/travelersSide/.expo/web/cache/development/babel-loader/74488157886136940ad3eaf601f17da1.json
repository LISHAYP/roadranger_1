{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nvar isOrientationPortrait = function isOrientationPortrait(_ref) {\n  var width = _ref.width,\n    height = _ref.height;\n  return height >= width;\n};\nvar isOrientationLandscape = function isOrientationLandscape(_ref2) {\n  var width = _ref2.width,\n    height = _ref2.height;\n  return width >= height;\n};\nexport function useDeviceOrientation() {\n  var screen = Dimensions.get('screen');\n  var initialState = {\n    portrait: isOrientationPortrait(screen),\n    landscape: isOrientationLandscape(screen)\n  };\n  var _useState = useState(initialState),\n    _useState2 = _slicedToArray(_useState, 2),\n    orientation = _useState2[0],\n    setOrientation = _useState2[1];\n  useEffect(function () {\n    var onChange = function onChange(_ref3) {\n      var screen = _ref3.screen;\n      setOrientation({\n        portrait: isOrientationPortrait(screen),\n        landscape: isOrientationLandscape(screen)\n      });\n    };\n    var subscription = Dimensions.addEventListener('change', onChange);\n    return function () {\n      if (typeof (subscription === null || subscription === void 0 ? void 0 : subscription.remove) === 'function') {\n        subscription.remove();\n      }\n    };\n  }, []);\n  return orientation.portrait ? 'PORTRAIT' : 'LANDSCAPE';\n}","map":{"version":3,"sources":["useDeviceOrientation.ts"],"names":["useEffect","useState","isOrientationPortrait","width","height","isOrientationLandscape","useDeviceOrientation","screen","Dimensions","get","initialState","portrait","landscape","orientation","setOrientation","onChange","_ref3","subscription","addEventListener","remove"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,OAAA,UAAA;AAG3C,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqB,CAAG,IAAA,EAAA;EAAA,IAAGC,KAAK,GAAsB,IAAA,CAA3BA,KAAK;IAAEC,MAAAA,GAAoB,IAAA,CAApBA,MAAAA;EAAoB,OAC1DA,MAAM,IAAID,KAAK;AAAA,CAAA;AACjB,IAAME,sBAAsB,GAAG,SAAzBA,sBAAsB,CAAG,KAAA,EAAA;EAAA,IAAGF,KAAK,GAAsB,KAAA,CAA3BA,KAAK;IAAEC,MAAAA,GAAoB,KAAA,CAApBA,MAAAA;EAAoB,OAC3DD,KAAK,IAAIC,MAAM;AAAA,CAAA;AAEjB,OAAO,SAASE,oBAAoBA,CAAAA,EAAG;EACrC,IAAMC,MAAM,GAAGC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC;EACvC,IAAMC,YAAY,GAAG;IACnBC,QAAQ,EAAET,qBAAqB,CAACK,MAAM,CAAC;IACvCK,SAAS,EAAEP,sBAAsB,CAACE,MAAM;EAC1C,CAAC;EAED,IAAA,SAAA,GAAsCN,QAAQ,CAACS,YAAY,CAAC;IAAA,UAAA,GAAA,cAAA,CAAA,SAAA;IAArDG,WAAW,GAAA,UAAA;IAAEC,cAAc,GAAA,UAAA;EAElCd,SAAS,CAAC,YAAM;IACd,IAAMe,QAAQ,GAAGC,SAAXD,QAAQ,CAAGC,KAAAA,EAAwC;MAAvC,IAAET,MAAAA,GAAgC,KAAA,CAAhCA,MAAAA;MAClBO,cAAc,CAAC;QACbH,QAAQ,EAAET,qBAAqB,CAACK,MAAM,CAAC;QACvCK,SAAS,EAAEP,sBAAsB,CAACE,MAAM;MAC1C,CAAC,CAAC;IACJ,CAAC;IAED,IAAMU,YAAY,GAAGT,UAAU,CAACU,gBAAgB,CAAC,QAAQ,EAAEH,QAAQ,CAAC;IAEpE,OAAO,YAAM;MACX,IAAI,QAAOE,YAAY,KAAA,IAAA,IAAZA,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZA,YAAY,CAAEE,MAAM,CAAA,KAAK,UAAU,EAAE;QAC9CF,YAAY,CAACE,MAAM,EAAE;MACvB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAON,WAAW,CAACF,QAAQ,GAAG,UAAU,GAAG,WAAW;AACxD","sourceRoot":"../../src","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Dimensions } from 'react-native';\nconst isOrientationPortrait = _ref => {\n  let {\n    width,\n    height\n  } = _ref;\n  return height >= width;\n};\nconst isOrientationLandscape = _ref2 => {\n  let {\n    width,\n    height\n  } = _ref2;\n  return width >= height;\n};\nexport function useDeviceOrientation() {\n  const screen = Dimensions.get('screen');\n  const initialState = {\n    portrait: isOrientationPortrait(screen),\n    landscape: isOrientationLandscape(screen)\n  };\n  const [orientation, setOrientation] = useState(initialState);\n  useEffect(() => {\n    const onChange = _ref3 => {\n      let {\n        screen\n      } = _ref3;\n      setOrientation({\n        portrait: isOrientationPortrait(screen),\n        landscape: isOrientationLandscape(screen)\n      });\n    };\n    const subscription = Dimensions.addEventListener('change', onChange);\n    return () => {\n      if (typeof (subscription === null || subscription === void 0 ? void 0 : subscription.remove) === 'function') {\n        subscription.remove();\n      }\n    };\n  }, []);\n  return orientation.portrait ? 'PORTRAIT' : 'LANDSCAPE';\n}\n//# sourceMappingURL=useDeviceOrientation.js.map"]},"metadata":{},"sourceType":"module"}