{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nexport default function deleteNotificationChannelGroupAsync(_x) {\n  return _deleteNotificationChannelGroupAsync.apply(this, arguments);\n}\nfunction _deleteNotificationChannelGroupAsync() {\n  _deleteNotificationChannelGroupAsync = _asyncToGenerator(function* (groupId) {\n    console.debug('Notification channels feature is only supported on Android.');\n  });\n  return _deleteNotificationChannelGroupAsync.apply(this, arguments);\n}","map":{"version":3,"sources":["../src/deleteNotificationChannelGroupAsync.ts"],"names":[],"mappings":";AAOA,wBAA8B,mCAAmC,CAAA,EAAA;EAAA,OAAA,oCAAA,CAAA,KAAA,OAAA,SAAA;AAAA;AAEhE,SAAA,qCAAA;EAAA,oCAAA,GAAA,iBAAA,CAFc,WAAmD,OAAe,EAAA;IAC/E,OAAO,CAAC,KAAK,CAAC,6DAA6D,CAAC;EAC9E,CAAC;EAAA,OAAA,oCAAA,CAAA,KAAA,OAAA,SAAA;AAAA","sourcesContent":["/**\n * Removes the notification channel group and all notification channels that belong to it.\n * @param groupId The channel group identifier.\n * @return A Promise which resolves once the channel group is removed (or if there was no channel group for given identifier).\n * @platform android\n * @header channels\n */\nexport default async function deleteNotificationChannelGroupAsync(groupId: string): Promise<void> {\n  console.debug('Notification channels feature is only supported on Android.');\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}