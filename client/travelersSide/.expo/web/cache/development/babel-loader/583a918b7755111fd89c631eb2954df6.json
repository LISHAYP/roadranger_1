{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nexport default function getNotificationChannelsAsync() {\n  return _getNotificationChannelsAsync.apply(this, arguments);\n}\nfunction _getNotificationChannelsAsync() {\n  _getNotificationChannelsAsync = _asyncToGenerator(function* () {\n    console.debug('Notification channels feature is only supported on Android.');\n    return [];\n  });\n  return _getNotificationChannelsAsync.apply(this, arguments);\n}","map":{"version":3,"sources":["../src/getNotificationChannelsAsync.ts"],"names":[],"mappings":";AASA,wBAA8B,4BAA4B,CAAA;EAAA,OAAA,6BAAA,CAAA,KAAA,OAAA,SAAA;AAAA;AAGzD,SAAA,8BAAA;EAAA,6BAAA,GAAA,iBAAA,CAHc,aAA2C;IACxD,OAAO,CAAC,KAAK,CAAC,6DAA6D,CAAC;IAC5E,OAAO,EAAE;EACX,CAAC;EAAA,OAAA,6BAAA,CAAA,KAAA,OAAA,SAAA;AAAA","sourcesContent":["import { NotificationChannel } from './NotificationChannelManager.types';\n\n/**\n * Fetches information about all known notification channels.\n * @return A Promise which resolves to an array of channels. On platforms that do not support notification channels,\n * it will always resolve to an empty array.\n * @platform android\n * @header channels\n */\nexport default async function getNotificationChannelsAsync(): Promise<NotificationChannel[]> {\n  console.debug('Notification channels feature is only supported on Android.');\n  return [];\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}