{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ParsedText from 'react-native-parsed-text';\nimport { StylePropType } from \"./utils\";\nimport { useChatContext } from \"./GiftedChatContext\";\nimport { error } from \"./logging\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar WWW_URL_PATTERN = /^www\\./i;\nvar _StyleSheet$create = StyleSheet.create({\n    textStyle: {\n      fontSize: 16,\n      lineHeight: 20,\n      marginTop: 5,\n      marginBottom: 5,\n      marginLeft: 10,\n      marginRight: 10\n    }\n  }),\n  textStyle = _StyleSheet$create.textStyle;\nvar styles = {\n  left: StyleSheet.create({\n    container: {},\n    text: _objectSpread({\n      color: 'black'\n    }, textStyle),\n    link: {\n      color: 'black',\n      textDecorationLine: 'underline'\n    }\n  }),\n  right: StyleSheet.create({\n    container: {},\n    text: _objectSpread({\n      color: 'white'\n    }, textStyle),\n    link: {\n      color: 'white',\n      textDecorationLine: 'underline'\n    }\n  })\n};\nvar DEFAULT_OPTION_TITLES = ['Call', 'Text', 'Cancel'];\nexport function MessageText(_ref) {\n  var _ref$currentMessage = _ref.currentMessage,\n    currentMessage = _ref$currentMessage === void 0 ? {} : _ref$currentMessage,\n    _ref$optionTitles = _ref.optionTitles,\n    optionTitles = _ref$optionTitles === void 0 ? DEFAULT_OPTION_TITLES : _ref$optionTitles,\n    _ref$position = _ref.position,\n    position = _ref$position === void 0 ? 'left' : _ref$position,\n    containerStyle = _ref.containerStyle,\n    textStyle = _ref.textStyle,\n    linkStyleProp = _ref.linkStyle,\n    customTextStyle = _ref.customTextStyle,\n    _ref$parsePatterns = _ref.parsePatterns,\n    parsePatterns = _ref$parsePatterns === void 0 ? function () {\n      return [];\n    } : _ref$parsePatterns,\n    textProps = _ref.textProps;\n  var _useChatContext = useChatContext(),\n    actionSheet = _useChatContext.actionSheet;\n  var onUrlPress = function onUrlPress(url) {\n    if (WWW_URL_PATTERN.test(url)) {\n      onUrlPress(\"https://\" + url);\n    } else {\n      Linking.openURL(url).catch(function (e) {\n        error(e, 'No handler for URL:', url);\n      });\n    }\n  };\n  var onPhonePress = function onPhonePress(phone) {\n    var options = optionTitles && optionTitles.length > 0 ? optionTitles.slice(0, 3) : DEFAULT_OPTION_TITLES;\n    var cancelButtonIndex = options.length - 1;\n    actionSheet().showActionSheetWithOptions({\n      options: options,\n      cancelButtonIndex: cancelButtonIndex\n    }, function (buttonIndex) {\n      switch (buttonIndex) {\n        case 0:\n          Linking.openURL(\"tel:\" + phone).catch(function (e) {\n            error(e, 'No handler for telephone');\n          });\n          break;\n        case 1:\n          Linking.openURL(\"sms:\" + phone).catch(function (e) {\n            error(e, 'No handler for text');\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  };\n  var onEmailPress = function onEmailPress(email) {\n    return Linking.openURL(\"mailto:\" + email).catch(function (e) {\n      return error(e, 'No handler for mailto');\n    });\n  };\n  var linkStyle = [styles[position].link, linkStyleProp && linkStyleProp[position]];\n  return _jsx(View, {\n    style: [styles[position].container, containerStyle && containerStyle[position]],\n    children: _jsx(ParsedText, {\n      style: [styles[position].text, textStyle && textStyle[position], customTextStyle],\n      parse: [].concat(_toConsumableArray(parsePatterns(linkStyle)), [{\n        type: 'url',\n        style: linkStyle,\n        onPress: onUrlPress\n      }, {\n        type: 'phone',\n        style: linkStyle,\n        onPress: onPhonePress\n      }, {\n        type: 'email',\n        style: linkStyle,\n        onPress: onEmailPress\n      }]),\n      childrenProps: _objectSpread({}, textProps),\n      children: currentMessage.text\n    })\n  });\n}\nMessageText.propTypes = {\n  position: PropTypes.oneOf(['left', 'right']),\n  optionTitles: PropTypes.arrayOf(PropTypes.string),\n  currentMessage: PropTypes.object,\n  containerStyle: PropTypes.shape({\n    left: StylePropType,\n    right: StylePropType\n  }),\n  textStyle: PropTypes.shape({\n    left: StylePropType,\n    right: StylePropType\n  }),\n  linkStyle: PropTypes.shape({\n    left: StylePropType,\n    right: StylePropType\n  }),\n  parsePatterns: PropTypes.func,\n  textProps: PropTypes.object,\n  customTextStyle: StylePropType\n};","map":{"version":3,"sources":["../src/MessageText.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Linking, StyleSheet, View, } from 'react-native';\n// @ts-ignore\nimport ParsedText from 'react-native-parsed-text';\nimport { StylePropType } from './utils';\nimport { useChatContext } from './GiftedChatContext';\nimport { error } from './logging';\nconst WWW_URL_PATTERN = /^www\\./i;\nconst { textStyle } = StyleSheet.create({\n    textStyle: {\n        fontSize: 16,\n        lineHeight: 20,\n        marginTop: 5,\n        marginBottom: 5,\n        marginLeft: 10,\n        marginRight: 10,\n    },\n});\nconst styles = {\n    left: StyleSheet.create({\n        container: {},\n        text: {\n            color: 'black',\n            ...textStyle,\n        },\n        link: {\n            color: 'black',\n            textDecorationLine: 'underline',\n        },\n    }),\n    right: StyleSheet.create({\n        container: {},\n        text: {\n            color: 'white',\n            ...textStyle,\n        },\n        link: {\n            color: 'white',\n            textDecorationLine: 'underline',\n        },\n    }),\n};\nconst DEFAULT_OPTION_TITLES = ['Call', 'Text', 'Cancel'];\nexport function MessageText({ currentMessage = {}, optionTitles = DEFAULT_OPTION_TITLES, position = 'left', containerStyle, textStyle, linkStyle: linkStyleProp, customTextStyle, parsePatterns = () => [], textProps, }) {\n    const { actionSheet } = useChatContext();\n    // TODO: React.memo\n    // const shouldComponentUpdate = (nextProps: MessageTextProps<TMessage>) => {\n    //   return (\n    //     !!currentMessage &&\n    //     !!nextProps.currentMessage &&\n    //     currentMessage.text !== nextProps.currentMessage.text\n    //   )\n    // }\n    const onUrlPress = (url) => {\n        // When someone sends a message that includes a website address beginning with \"www.\" (omitting the scheme),\n        // react-native-parsed-text recognizes it as a valid url, but Linking fails to open due to the missing scheme.\n        if (WWW_URL_PATTERN.test(url)) {\n            onUrlPress(`https://${url}`);\n        }\n        else {\n            Linking.openURL(url).catch(e => {\n                error(e, 'No handler for URL:', url);\n            });\n        }\n    };\n    const onPhonePress = (phone) => {\n        const options = optionTitles && optionTitles.length > 0\n            ? optionTitles.slice(0, 3)\n            : DEFAULT_OPTION_TITLES;\n        const cancelButtonIndex = options.length - 1;\n        actionSheet().showActionSheetWithOptions({\n            options,\n            cancelButtonIndex,\n        }, (buttonIndex) => {\n            switch (buttonIndex) {\n                case 0:\n                    Linking.openURL(`tel:${phone}`).catch(e => {\n                        error(e, 'No handler for telephone');\n                    });\n                    break;\n                case 1:\n                    Linking.openURL(`sms:${phone}`).catch(e => {\n                        error(e, 'No handler for text');\n                    });\n                    break;\n                default:\n                    break;\n            }\n        });\n    };\n    const onEmailPress = (email) => Linking.openURL(`mailto:${email}`).catch(e => error(e, 'No handler for mailto'));\n    const linkStyle = [\n        styles[position].link,\n        linkStyleProp && linkStyleProp[position],\n    ];\n    return (<View style={[\n            styles[position].container,\n            containerStyle && containerStyle[position],\n        ]}>\n      <ParsedText style={[\n            styles[position].text,\n            textStyle && textStyle[position],\n            customTextStyle,\n        ]} parse={[\n            ...parsePatterns(linkStyle),\n            { type: 'url', style: linkStyle, onPress: onUrlPress },\n            { type: 'phone', style: linkStyle, onPress: onPhonePress },\n            { type: 'email', style: linkStyle, onPress: onEmailPress },\n        ]} childrenProps={{ ...textProps }}>\n        {currentMessage.text}\n      </ParsedText>\n    </View>);\n}\nMessageText.propTypes = {\n    position: PropTypes.oneOf(['left', 'right']),\n    optionTitles: PropTypes.arrayOf(PropTypes.string),\n    currentMessage: PropTypes.object,\n    containerStyle: PropTypes.shape({\n        left: StylePropType,\n        right: StylePropType,\n    }),\n    textStyle: PropTypes.shape({\n        left: StylePropType,\n        right: StylePropType,\n    }),\n    linkStyle: PropTypes.shape({\n        left: StylePropType,\n        right: StylePropType,\n    }),\n    parsePatterns: PropTypes.func,\n    textProps: PropTypes.object,\n    customTextStyle: StylePropType,\n};\n//# sourceMappingURL=MessageText.js.map"]},"metadata":{},"sourceType":"module"}