{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nexport default function getNotificationChannelAsync(_x) {\n  return _getNotificationChannelAsync.apply(this, arguments);\n}\nfunction _getNotificationChannelAsync() {\n  _getNotificationChannelAsync = _asyncToGenerator(function* (channelId) {\n    console.debug('Notification channels feature is only supported on Android.');\n    return null;\n  });\n  return _getNotificationChannelAsync.apply(this, arguments);\n}","map":{"version":3,"sources":["../src/getNotificationChannelAsync.ts"],"names":[],"mappings":";AAUA,wBAA8B,2BAA2B,CAAA,EAAA;EAAA,OAAA,4BAAA,CAAA,KAAA,OAAA,SAAA;AAAA;AAKxD,SAAA,6BAAA;EAAA,4BAAA,GAAA,iBAAA,CALc,WACb,SAAiB,EAAA;IAEjB,OAAO,CAAC,KAAK,CAAC,6DAA6D,CAAC;IAC5E,OAAO,IAAI;EACb,CAAC;EAAA,OAAA,4BAAA,CAAA,KAAA,OAAA,SAAA;AAAA","sourcesContent":["import { NotificationChannel } from './NotificationChannelManager.types';\n\n/**\n * Fetches information about a single notification channel.\n * @param channelId The channel's identifier.\n * @return A Promise which resolves to the channel object (of type [`NotificationChannel`](#notificationchannel)) or to `null`\n * if there was no channel found for this identifier. On platforms that do not support notification channels, it will always resolve to `null`.\n * @platform android\n * @header channels\n */\nexport default async function getNotificationChannelAsync(\n  channelId: string\n): Promise<NotificationChannel | null> {\n  console.debug('Notification channels feature is only supported on Android.');\n  return null;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}