{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { UnavailabilityError } from 'expo-modules-core';\nimport NotificationPresenter from \"./NotificationPresenterModule\";\nexport default function dismissNotificationAsync(_x) {\n  return _dismissNotificationAsync.apply(this, arguments);\n}\nfunction _dismissNotificationAsync() {\n  _dismissNotificationAsync = _asyncToGenerator(function* (notificationIdentifier) {\n    if (!NotificationPresenter.dismissNotificationAsync) {\n      throw new UnavailabilityError('Notifications', 'dismissNotificationAsync');\n    }\n    return yield NotificationPresenter.dismissNotificationAsync(notificationIdentifier);\n  });\n  return _dismissNotificationAsync.apply(this, arguments);\n}","map":{"version":3,"sources":["../src/dismissNotificationAsync.ts"],"names":[],"mappings":";AAAA,SAAS,mBAAmB,QAAQ,mBAAmB;AAEvD,OAAO,qBAAqB;AAQ5B,wBAA8B,wBAAwB,CAAA,EAAA;EAAA,OAAA,yBAAA,CAAA,KAAA,OAAA,SAAA;AAAA;AAQrD,SAAA,0BAAA;EAAA,yBAAA,GAAA,iBAAA,CARc,WACb,sBAA8B,EAAA;IAE9B,IAAI,CAAC,qBAAqB,CAAC,wBAAwB,EAAE;MACnD,MAAM,IAAI,mBAAmB,CAAC,eAAe,EAAE,0BAA0B,CAAC;IAC3E;IAED,aAAa,qBAAqB,CAAC,wBAAwB,CAAC,sBAAsB,CAAC;EACrF,CAAC;EAAA,OAAA,yBAAA,CAAA,KAAA,OAAA,SAAA;AAAA","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationPresenter from './NotificationPresenterModule';\n\n/**\n * Removes notification displayed in the notification tray (Notification Center).\n * @param notificationIdentifier The notification identifier, obtained either via `setNotificationHandler` method or in the listener added with `addNotificationReceivedListener`.\n * @return A Promise which resolves once the request to dismiss the notification is successfully dispatched to the notifications manager.\n * @header dismiss\n */\nexport default async function dismissNotificationAsync(\n  notificationIdentifier: string\n): Promise<void> {\n  if (!NotificationPresenter.dismissNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'dismissNotificationAsync');\n  }\n\n  return await NotificationPresenter.dismissNotificationAsync(notificationIdentifier);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}