{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"onPress\"];\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Color from \"./Color\";\nimport { StylePropType } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar carrot = Color.carrot,\n  emerald = Color.emerald,\n  peterRiver = Color.peterRiver,\n  wisteria = Color.wisteria,\n  alizarin = Color.alizarin,\n  turquoise = Color.turquoise,\n  midnightBlue = Color.midnightBlue;\nvar styles = StyleSheet.create({\n  avatarStyle: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 40,\n    height: 40,\n    borderRadius: 20\n  },\n  avatarTransparent: {\n    backgroundColor: Color.backgroundTransparent\n  },\n  textStyle: {\n    color: Color.white,\n    fontSize: 16,\n    backgroundColor: Color.backgroundTransparent,\n    fontWeight: '100'\n  }\n});\nvar GiftedAvatar = function (_React$Component) {\n  _inherits(GiftedAvatar, _React$Component);\n  var _super = _createSuper(GiftedAvatar);\n  function GiftedAvatar() {\n    var _this;\n    _classCallCheck(this, GiftedAvatar);\n    _this = _super.apply(this, arguments);\n    _this.avatarName = undefined;\n    _this.avatarColor = undefined;\n    _this.handleOnPress = function () {\n      var _this$props = _this.props,\n        onPress = _this$props.onPress,\n        other = _objectWithoutProperties(_this$props, _excluded);\n      if (_this.props.onPress) {\n        _this.props.onPress(other);\n      }\n    };\n    _this.handleOnLongPress = function () {};\n    return _this;\n  }\n  _createClass(GiftedAvatar, [{\n    key: \"setAvatarColor\",\n    value: function setAvatarColor() {\n      var userName = this.props.user && this.props.user.name || '';\n      var name = userName.toUpperCase().split(' ');\n      if (name.length === 1) {\n        this.avatarName = \"\" + name[0].charAt(0);\n      } else if (name.length > 1) {\n        this.avatarName = \"\" + name[0].charAt(0) + name[1].charAt(0);\n      } else {\n        this.avatarName = '';\n      }\n      var sumChars = 0;\n      for (var i = 0; i < userName.length; i += 1) {\n        sumChars += userName.charCodeAt(i);\n      }\n      var colors = [carrot, emerald, peterRiver, wisteria, alizarin, turquoise, midnightBlue];\n      this.avatarColor = colors[sumChars % colors.length];\n    }\n  }, {\n    key: \"renderAvatar\",\n    value: function renderAvatar() {\n      var user = this.props.user;\n      if (user) {\n        if (typeof user.avatar === 'function') {\n          return user.avatar([styles.avatarStyle, this.props.avatarStyle]);\n        } else if (typeof user.avatar === 'string') {\n          return _jsx(Image, {\n            source: {\n              uri: user.avatar\n            },\n            style: [styles.avatarStyle, this.props.avatarStyle]\n          });\n        } else if (typeof user.avatar === 'number') {\n          return _jsx(Image, {\n            source: user.avatar,\n            style: [styles.avatarStyle, this.props.avatarStyle]\n          });\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"renderInitials\",\n    value: function renderInitials() {\n      return _jsx(Text, {\n        style: [styles.textStyle, this.props.textStyle],\n        children: this.avatarName\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.user || !this.props.user.name && !this.props.user.avatar) {\n        return _jsx(View, {\n          style: [styles.avatarStyle, styles.avatarTransparent, this.props.avatarStyle],\n          accessibilityRole: \"image\"\n        });\n      }\n      if (this.props.user.avatar) {\n        return _jsx(TouchableOpacity, {\n          disabled: !this.props.onPress,\n          onPress: this.props.onPress,\n          onLongPress: this.props.onLongPress,\n          accessibilityRole: \"image\",\n          children: this.renderAvatar()\n        });\n      }\n      this.setAvatarColor();\n      return _jsx(TouchableOpacity, {\n        disabled: !this.props.onPress,\n        onPress: this.props.onPress,\n        onLongPress: this.props.onLongPress,\n        style: [styles.avatarStyle, {\n          backgroundColor: this.avatarColor\n        }, this.props.avatarStyle],\n        accessibilityRole: \"image\",\n        children: this.renderInitials()\n      });\n    }\n  }]);\n  return GiftedAvatar;\n}(React.Component);\nexport { GiftedAvatar as default };\nGiftedAvatar.defaultProps = {\n  user: {\n    name: null,\n    avatar: null\n  },\n  onPress: undefined,\n  onLongPress: undefined,\n  avatarStyle: {},\n  textStyle: {}\n};\nGiftedAvatar.propTypes = {\n  user: PropTypes.object,\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  avatarStyle: StylePropType,\n  textStyle: StylePropType\n};","map":{"version":3,"sources":["../src/GiftedAvatar.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Image, Text, TouchableOpacity, View, StyleSheet, } from 'react-native';\nimport Color from './Color';\nimport { StylePropType } from './utils';\nconst { carrot, emerald, peterRiver, wisteria, alizarin, turquoise, midnightBlue, } = Color;\nconst styles = StyleSheet.create({\n    avatarStyle: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 40,\n        height: 40,\n        borderRadius: 20,\n    },\n    avatarTransparent: {\n        backgroundColor: Color.backgroundTransparent,\n    },\n    textStyle: {\n        color: Color.white,\n        fontSize: 16,\n        backgroundColor: Color.backgroundTransparent,\n        fontWeight: '100',\n    },\n});\nexport default class GiftedAvatar extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.avatarName = undefined;\n        this.avatarColor = undefined;\n        this.handleOnPress = () => {\n            const { onPress, ...other } = this.props;\n            if (this.props.onPress) {\n                this.props.onPress(other);\n            }\n        };\n        this.handleOnLongPress = () => { };\n    }\n    setAvatarColor() {\n        const userName = (this.props.user && this.props.user.name) || '';\n        const name = userName.toUpperCase().split(' ');\n        if (name.length === 1) {\n            this.avatarName = `${name[0].charAt(0)}`;\n        }\n        else if (name.length > 1) {\n            this.avatarName = `${name[0].charAt(0)}${name[1].charAt(0)}`;\n        }\n        else {\n            this.avatarName = '';\n        }\n        let sumChars = 0;\n        for (let i = 0; i < userName.length; i += 1) {\n            sumChars += userName.charCodeAt(i);\n        }\n        // inspired by https://github.com/wbinnssmith/react-user-avatar\n        // colors from https://flatuicolors.com/\n        const colors = [\n            carrot,\n            emerald,\n            peterRiver,\n            wisteria,\n            alizarin,\n            turquoise,\n            midnightBlue,\n        ];\n        this.avatarColor = colors[sumChars % colors.length];\n    }\n    renderAvatar() {\n        const { user } = this.props;\n        if (user) {\n            if (typeof user.avatar === 'function') {\n                return user.avatar([styles.avatarStyle, this.props.avatarStyle]);\n            }\n            else if (typeof user.avatar === 'string') {\n                return (<Image source={{ uri: user.avatar }} style={[styles.avatarStyle, this.props.avatarStyle]}/>);\n            }\n            else if (typeof user.avatar === 'number') {\n                return (<Image source={user.avatar} style={[styles.avatarStyle, this.props.avatarStyle]}/>);\n            }\n        }\n        return null;\n    }\n    renderInitials() {\n        return (<Text style={[styles.textStyle, this.props.textStyle]}>\n        {this.avatarName}\n      </Text>);\n    }\n    render() {\n        if (!this.props.user ||\n            (!this.props.user.name && !this.props.user.avatar)) {\n            // render placeholder\n            return (<View style={[\n                    styles.avatarStyle,\n                    styles.avatarTransparent,\n                    this.props.avatarStyle,\n                ]} accessibilityRole='image'/>);\n        }\n        if (this.props.user.avatar) {\n            return (<TouchableOpacity disabled={!this.props.onPress} onPress={this.props.onPress} onLongPress={this.props.onLongPress} accessibilityRole='image'>\n          {this.renderAvatar()}\n        </TouchableOpacity>);\n        }\n        this.setAvatarColor();\n        return (<TouchableOpacity disabled={!this.props.onPress} onPress={this.props.onPress} onLongPress={this.props.onLongPress} style={[\n                styles.avatarStyle,\n                { backgroundColor: this.avatarColor },\n                this.props.avatarStyle,\n            ]} accessibilityRole='image'>\n        {this.renderInitials()}\n      </TouchableOpacity>);\n    }\n}\nGiftedAvatar.defaultProps = {\n    user: {\n        name: null,\n        avatar: null,\n    },\n    onPress: undefined,\n    onLongPress: undefined,\n    avatarStyle: {},\n    textStyle: {},\n};\nGiftedAvatar.propTypes = {\n    user: PropTypes.object,\n    onPress: PropTypes.func,\n    onLongPress: PropTypes.func,\n    avatarStyle: StylePropType,\n    textStyle: StylePropType,\n};\n//# sourceMappingURL=GiftedAvatar.js.map"]},"metadata":{},"sourceType":"module"}