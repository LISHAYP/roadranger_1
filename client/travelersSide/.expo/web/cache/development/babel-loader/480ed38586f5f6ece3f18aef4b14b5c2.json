{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar isTablet = function isTablet() {\n  var pixelDensity = PixelRatio.get();\n  var adjustedWidth = width * pixelDensity;\n  var adjustedHeight = height * pixelDensity;\n  if (pixelDensity < 2 && (adjustedWidth >= 1000 || adjustedHeight >= 1000)) {\n    return true;\n  } else {\n    return pixelDensity === 2 && (adjustedWidth >= 1824 || adjustedHeight >= 1824);\n  }\n};\nvar useDetectDevice = {\n  isAndroid: Platform.OS === 'android',\n  isIOS: Platform.OS === 'ios',\n  isTablet: isTablet()\n};\nexport { useDetectDevice };","map":{"version":3,"sources":["toolkits/index.ts"],"names":["width","height","Dimensions","get","isTablet","pixelDensity","PixelRatio","adjustedWidth","adjustedHeight","useDetectDevice","isAndroid","Platform","OS","isIOS"],"mappings":";;;AAGA,IAAA,eAAA,GAA0BE,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC;EAA1CH,KAAK,GAAA,eAAA,CAALA,KAAK;EAAEC,MAAAA,GAAAA,eAAAA,CAAAA,MAAAA;AAEf,IAAMG,QAAQ,GAAGA,SAAXA,QAAQ,CAAA,EAAS;EACrB,IAAIC,YAAY,GAAGC,UAAU,CAACH,GAAG,EAAE;EACnC,IAAMI,aAAa,GAAGP,KAAK,GAAGK,YAAY;EAC1C,IAAMG,cAAc,GAAGP,MAAM,GAAGI,YAAY;EAC5C,IAAIA,YAAY,GAAG,CAAC,KAAKE,aAAa,IAAI,IAAI,IAAIC,cAAc,IAAI,IAAI,CAAC,EAAE;IACzE,OAAO,IAAI;EACb,CAAC,MAAM;IACL,OACEH,YAAY,KAAK,CAAC,KAAKE,aAAa,IAAI,IAAI,IAAIC,cAAc,IAAI,IAAI,CAAC;EAE3E;AACF,CAAC;AAED,IAAMC,eAAiC,GAAG;EACxCC,SAAS,EAAEC,QAAQ,CAACC,EAAE,KAAK,SAAS;EACpCC,KAAK,EAAEF,QAAQ,CAACC,EAAE,KAAK,KAAK;EAC5BR,QAAQ,EAAEA,QAAQ;AACpB,CAAC;AAED,SAASK,eAAe","sourceRoot":"../../../src","sourcesContent":["import { Platform, PixelRatio, Dimensions } from 'react-native';\nconst {\n  width,\n  height\n} = Dimensions.get('window');\nconst isTablet = () => {\n  let pixelDensity = PixelRatio.get();\n  const adjustedWidth = width * pixelDensity;\n  const adjustedHeight = height * pixelDensity;\n  if (pixelDensity < 2 && (adjustedWidth >= 1000 || adjustedHeight >= 1000)) {\n    return true;\n  } else {\n    return pixelDensity === 2 && (adjustedWidth >= 1824 || adjustedHeight >= 1824);\n  }\n};\nconst useDetectDevice = {\n  isAndroid: Platform.OS === 'android',\n  isIOS: Platform.OS === 'ios',\n  isTablet: isTablet()\n};\nexport { useDetectDevice };\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}