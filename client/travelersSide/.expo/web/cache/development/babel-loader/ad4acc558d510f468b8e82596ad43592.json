{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { UnavailabilityError, Platform } from 'expo-modules-core';\nimport BadgeModule from \"./BadgeModule\";\nexport default function setBadgeCountAsync(_x, _x2) {\n  return _setBadgeCountAsync.apply(this, arguments);\n}\nfunction _setBadgeCountAsync() {\n  _setBadgeCountAsync = _asyncToGenerator(function* (badgeCount, options) {\n    if (!BadgeModule.setBadgeCountAsync) {\n      throw new UnavailabilityError('ExpoNotifications', 'setBadgeCountAsync');\n    }\n    return yield BadgeModule.setBadgeCountAsync(badgeCount, options == null ? void 0 : options[Platform.OS]);\n  });\n  return _setBadgeCountAsync.apply(this, arguments);\n}","map":{"version":3,"sources":["../src/setBadgeCountAsync.ts"],"names":[],"mappings":";AAAA,SAAS,mBAAmB,EAAE,QAAQ,QAAQ,mBAAmB;AAEjE,OAAO,WAAW;AAoBlB,wBAA8B,kBAAkB,CAAA,EAAA,EAAA,GAAA;EAAA,OAAA,mBAAA,CAAA,KAAA,OAAA,SAAA;AAAA;AAS/C,SAAA,oBAAA;EAAA,mBAAA,GAAA,iBAAA,CATc,WACb,UAAkB,EAClB,OAA8B,EAAA;IAE9B,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE;MACnC,MAAM,IAAI,mBAAmB,CAAC,mBAAmB,EAAE,oBAAoB,CAAC;IACzE;IAED,aAAa,WAAW,CAAC,kBAAkB,CAAC,UAAU,EAAE,OAAO,oBAAP,OAAO,CAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;EACjF,CAAC;EAAA,OAAA,mBAAA,CAAA,KAAA,OAAA,SAAA;AAAA","sourcesContent":["import { UnavailabilityError, Platform } from 'expo-modules-core';\n\nimport BadgeModule from './BadgeModule';\nimport { WebSetBadgeCountOptions } from './BadgeModule.types';\n\nexport interface SetBadgeCountOptions {\n  /**\n   * A configuration object described [in the `badgin` documentation](https://github.com/jaulz/badgin#options).\n   */\n  web?: WebSetBadgeCountOptions;\n}\n\n/**\n * Sets the badge of the app's icon to the specified number. Setting it to `0` clears the badge. On iOS, this method requires that you have requested\n * the user's permission for `allowBadge` via [`requestPermissionsAsync`](#notificationsrequestpermissionsasyncpermissions),\n * otherwise it will automatically return `false`.\n * > **Note:** Not all Android launchers support application badges. If the launcher does not support icon badges, the method will resolve to `false`.\n * @param badgeCount The count which should appear on the badge. A value of `0` will clear the badge.\n * @param options An object of options configuring behavior applied in Web environment.\n * @return It returns a Promise resolving to a boolean representing whether the setting of the badge succeeded.\n * @header badge\n */\nexport default async function setBadgeCountAsync(\n  badgeCount: number,\n  options?: SetBadgeCountOptions\n): Promise<boolean> {\n  if (!BadgeModule.setBadgeCountAsync) {\n    throw new UnavailabilityError('ExpoNotifications', 'setBadgeCountAsync');\n  }\n\n  return await BadgeModule.setBadgeCountAsync(badgeCount, options?.[Platform.OS]);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}