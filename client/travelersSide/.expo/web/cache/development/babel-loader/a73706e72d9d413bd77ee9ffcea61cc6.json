{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nexport default function deleteNotificationChannelAsync(_x) {\n  return _deleteNotificationChannelAsync.apply(this, arguments);\n}\nfunction _deleteNotificationChannelAsync() {\n  _deleteNotificationChannelAsync = _asyncToGenerator(function* (channelId) {\n    console.debug('Notification channels feature is only supported on Android.');\n  });\n  return _deleteNotificationChannelAsync.apply(this, arguments);\n}","map":{"version":3,"sources":["../src/deleteNotificationChannelAsync.ts"],"names":[],"mappings":";AAOA,wBAA8B,8BAA8B,CAAA,EAAA;EAAA,OAAA,+BAAA,CAAA,KAAA,OAAA,SAAA;AAAA;AAE3D,SAAA,gCAAA;EAAA,+BAAA,GAAA,iBAAA,CAFc,WAA8C,SAAiB,EAAA;IAC5E,OAAO,CAAC,KAAK,CAAC,6DAA6D,CAAC;EAC9E,CAAC;EAAA,OAAA,+BAAA,CAAA,KAAA,OAAA,SAAA;AAAA","sourcesContent":["/**\n * Removes the notification channel.\n * @param channelId The channel identifier.\n * @return A Promise which resolving once the channel is removed (or if there was no channel for given identifier).\n * @platform android\n * @header channels\n */\nexport default async function deleteNotificationChannelAsync(channelId: string): Promise<void> {\n  console.debug('Notification channels feature is only supported on Android.');\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}