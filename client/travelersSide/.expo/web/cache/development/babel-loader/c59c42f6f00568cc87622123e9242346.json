{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { MIN_COMPOSER_HEIGHT, DEFAULT_PLACEHOLDER } from \"./Constant\";\nimport Color from \"./Color\";\nimport { StylePropType } from \"./utils\";\nimport { useCallbackOne } from 'use-memo-one';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  textInput: _objectSpread(_objectSpread({\n    flex: 1,\n    marginLeft: 10,\n    fontSize: 16,\n    lineHeight: 16\n  }, Platform.select({\n    web: {\n      paddingTop: 6,\n      paddingLeft: 4\n    }\n  })), {}, {\n    marginTop: Platform.select({\n      ios: 6,\n      android: 0,\n      web: 6\n    }),\n    marginBottom: Platform.select({\n      ios: 5,\n      android: 3,\n      web: 4\n    })\n  })\n});\nexport function Composer(_ref) {\n  var _ref$composerHeight = _ref.composerHeight,\n    composerHeight = _ref$composerHeight === void 0 ? MIN_COMPOSER_HEIGHT : _ref$composerHeight,\n    _ref$disableComposer = _ref.disableComposer,\n    disableComposer = _ref$disableComposer === void 0 ? false : _ref$disableComposer,\n    _ref$keyboardAppearan = _ref.keyboardAppearance,\n    keyboardAppearance = _ref$keyboardAppearan === void 0 ? 'default' : _ref$keyboardAppearan,\n    _ref$multiline = _ref.multiline,\n    multiline = _ref$multiline === void 0 ? true : _ref$multiline,\n    _ref$onInputSizeChang = _ref.onInputSizeChanged,\n    onInputSizeChanged = _ref$onInputSizeChang === void 0 ? function () {} : _ref$onInputSizeChang,\n    _ref$onTextChanged = _ref.onTextChanged,\n    onTextChanged = _ref$onTextChanged === void 0 ? function () {} : _ref$onTextChanged,\n    _ref$placeholder = _ref.placeholder,\n    placeholder = _ref$placeholder === void 0 ? DEFAULT_PLACEHOLDER : _ref$placeholder,\n    _ref$placeholderTextC = _ref.placeholderTextColor,\n    placeholderTextColor = _ref$placeholderTextC === void 0 ? Color.defaultColor : _ref$placeholderTextC,\n    _ref$text = _ref.text,\n    text = _ref$text === void 0 ? '' : _ref$text,\n    _ref$textInputAutoFoc = _ref.textInputAutoFocus,\n    textInputAutoFocus = _ref$textInputAutoFoc === void 0 ? false : _ref$textInputAutoFoc,\n    _ref$textInputProps = _ref.textInputProps,\n    textInputProps = _ref$textInputProps === void 0 ? {} : _ref$textInputProps,\n    textInputStyle = _ref.textInputStyle;\n  var dimensionsRef = useRef();\n  var determineInputSizeChange = useCallbackOne(function (dimensions) {\n    if (!dimensions) {\n      return;\n    }\n    if (!dimensionsRef || !dimensionsRef.current || dimensionsRef.current && (dimensionsRef.current.width !== dimensions.width || dimensionsRef.current.height !== dimensions.height)) {\n      dimensionsRef.current = dimensions;\n      onInputSizeChanged(dimensions);\n    }\n  }, [onInputSizeChanged]);\n  var handleContentSizeChange = function handleContentSizeChange(_ref2) {\n    var contentSize = _ref2.nativeEvent.contentSize;\n    return determineInputSizeChange(contentSize);\n  };\n  return _jsx(TextInput, _objectSpread({\n    testID: placeholder,\n    accessible: true,\n    accessibilityLabel: placeholder,\n    placeholder: placeholder,\n    placeholderTextColor: placeholderTextColor,\n    multiline: multiline,\n    editable: !disableComposer,\n    onContentSizeChange: handleContentSizeChange,\n    onChangeText: onTextChanged,\n    style: [styles.textInput, textInputStyle, _objectSpread({\n      height: composerHeight\n    }, Platform.select({\n      web: {\n        outlineWidth: 0,\n        outlineColor: 'transparent',\n        outlineOffset: 0\n      }\n    }))],\n    autoFocus: textInputAutoFocus,\n    value: text,\n    enablesReturnKeyAutomatically: true,\n    underlineColorAndroid: \"transparent\",\n    keyboardAppearance: keyboardAppearance\n  }, textInputProps));\n}\nComposer.propTypes = {\n  composerHeight: PropTypes.number,\n  text: PropTypes.string,\n  placeholder: PropTypes.string,\n  placeholderTextColor: PropTypes.string,\n  textInputProps: PropTypes.object,\n  onTextChanged: PropTypes.func,\n  onInputSizeChanged: PropTypes.func,\n  multiline: PropTypes.bool,\n  disableComposer: PropTypes.bool,\n  textInputStyle: StylePropType,\n  textInputAutoFocus: PropTypes.bool,\n  keyboardAppearance: PropTypes.string\n};","map":{"version":3,"sources":["../src/Composer.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport { Platform, StyleSheet, TextInput, } from 'react-native';\nimport { MIN_COMPOSER_HEIGHT, DEFAULT_PLACEHOLDER } from './Constant';\nimport Color from './Color';\nimport { StylePropType } from './utils';\nimport { useCallbackOne } from 'use-memo-one';\nconst styles = StyleSheet.create({\n    textInput: {\n        flex: 1,\n        marginLeft: 10,\n        fontSize: 16,\n        lineHeight: 16,\n        ...Platform.select({\n            web: {\n                paddingTop: 6,\n                paddingLeft: 4,\n            },\n        }),\n        marginTop: Platform.select({\n            ios: 6,\n            android: 0,\n            web: 6,\n        }),\n        marginBottom: Platform.select({\n            ios: 5,\n            android: 3,\n            web: 4,\n        }),\n    },\n});\nexport function Composer({ composerHeight = MIN_COMPOSER_HEIGHT, disableComposer = false, keyboardAppearance = 'default', multiline = true, onInputSizeChanged = () => { }, onTextChanged = () => { }, placeholder = DEFAULT_PLACEHOLDER, placeholderTextColor = Color.defaultColor, text = '', textInputAutoFocus = false, textInputProps = {}, textInputStyle, }) {\n    const dimensionsRef = useRef();\n    const determineInputSizeChange = useCallbackOne((dimensions) => {\n        // Support earlier versions of React Native on Android.\n        if (!dimensions) {\n            return;\n        }\n        if (!dimensionsRef ||\n            !dimensionsRef.current ||\n            (dimensionsRef.current &&\n                (dimensionsRef.current.width !== dimensions.width ||\n                    dimensionsRef.current.height !== dimensions.height))) {\n            dimensionsRef.current = dimensions;\n            onInputSizeChanged(dimensions);\n        }\n    }, [onInputSizeChanged]);\n    const handleContentSizeChange = ({ nativeEvent: { contentSize }, }) => determineInputSizeChange(contentSize);\n    return (<TextInput testID={placeholder} accessible accessibilityLabel={placeholder} placeholder={placeholder} placeholderTextColor={placeholderTextColor} multiline={multiline} editable={!disableComposer} onContentSizeChange={handleContentSizeChange} onChangeText={onTextChanged} style={[\n            styles.textInput,\n            textInputStyle,\n            {\n                height: composerHeight,\n                ...Platform.select({\n                    web: {\n                        outlineWidth: 0,\n                        outlineColor: 'transparent',\n                        outlineOffset: 0,\n                    },\n                }),\n            },\n        ]} autoFocus={textInputAutoFocus} value={text} enablesReturnKeyAutomatically underlineColorAndroid='transparent' keyboardAppearance={keyboardAppearance} {...textInputProps}/>);\n}\nComposer.propTypes = {\n    composerHeight: PropTypes.number,\n    text: PropTypes.string,\n    placeholder: PropTypes.string,\n    placeholderTextColor: PropTypes.string,\n    textInputProps: PropTypes.object,\n    onTextChanged: PropTypes.func,\n    onInputSizeChanged: PropTypes.func,\n    multiline: PropTypes.bool,\n    disableComposer: PropTypes.bool,\n    textInputStyle: StylePropType,\n    textInputAutoFocus: PropTypes.bool,\n    keyboardAppearance: PropTypes.string,\n};\n//# sourceMappingURL=Composer.js.map"]},"metadata":{},"sourceType":"module"}