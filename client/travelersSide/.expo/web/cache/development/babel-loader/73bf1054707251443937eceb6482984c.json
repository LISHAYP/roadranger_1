{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useLayoutEffect, useEffect, useCallback, useState, useRef } from \"react\";\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { collection, doc, addDoc, query, where, getDocs, orderBy, onSnapshot, push, ref } from 'firebase/firestore';\nimport { signOut } from 'firebase/auth';\nimport { auth, database } from \"../firebase\";\nimport { useNavigation } from '@react-navigation/native';\nimport GradientBackground from \"../Components/GradientBackground\";\nimport BackButton from \"../Components/BackButton\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { async } from \"@firebase/util\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ChatWithSH(props) {\n  var navigation = useNavigation();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var chosenUser = props.route.params.user;\n  var userLogged = props.route.params.loggeduser;\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    chatRoomDocRef = _useState4[0],\n    setChatRoomDocRef = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    shouldRender = _useState6[0],\n    setShouldRender = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isStackholder = _useState8[0],\n    setisStackhold = _useState8[1];\n  console.log('im the logged user', userLogged);\n  console.log('im the chosen one!', chosenUser);\n  var onSignOut = function onSignOut() {\n    signOut(auth).catch(function (error) {\n      return console.log(error);\n    });\n  };\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return _jsx(TouchableOpacity, {\n          style: {\n            marginRight: 10\n          },\n          onPress: onSignOut,\n          children: _jsx(Text, {\n            children: \" Hi\"\n          })\n        });\n      }\n    });\n  }, [navigation]);\n  var createChatRoom = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var sortedUsers = [\"99\" + chosenUser.StakeholderId, userLogged.traveler_id].sort();\n      var chatRoomQuery = query(collection(database, 'chat_rooms'), where('users', '==', sortedUsers));\n      var chatRoomQuerySnapshot = yield getDocs(chatRoomQuery);\n      if (chatRoomQuerySnapshot.size !== 0) {\n        var existingChatRoomRef = chatRoomQuerySnapshot.docs[0].ref;\n        setChatRoomDocRef(chatRoomQuerySnapshot.docs[0].ref);\n        console.log('Chat room exists');\n        var messagesRef = collection(database, 'chat_rooms', existingChatRoomRef.id, 'messages');\n        var q = query(messagesRef, orderBy('createdAt', 'desc'));\n        var unsubscribe = onSnapshot(q, function (querySnapshot) {\n          var messages = querySnapshot.docs.map(function (doc) {\n            var data = doc.data();\n            return {\n              _id: uuidv4(),\n              createdAt: data.createdAt.toDate(),\n              text: data.text,\n              user: data.user\n            };\n          });\n          setMessages(messages);\n          setShouldRender(false);\n        });\n        return false;\n      } else {\n        var newChatRoomDocRef = yield addDoc(collection(database, 'chat_rooms'), {\n          users: sortedUsers,\n          messages: []\n        });\n        setChatRoomDocRef(newChatRoomDocRef);\n        console.log('Chat room created');\n        return true;\n      }\n    });\n    return function createChatRoom() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useLayoutEffect(function () {\n    var getMessages = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var isNewChatRoom = yield createChatRoom();\n        if (!isNewChatRoom) {\n          var messagesRef = collection(database, 'chat_rooms', chatRoomDocRef.id, 'messages');\n          var q = query(messagesRef, orderBy('createdAt', 'desc'));\n          var unsubscribe = onSnapshot(q, function (querySnapshot) {\n            var messages = querySnapshot.docs.map(function (doc) {\n              var data = doc.data();\n              return {\n                _id: uuidv4(),\n                createdAt: data.createdAt.toDate(),\n                text: data.text,\n                user: data.user\n              };\n            });\n            setMessages(messages);\n            setShouldRender(false);\n          });\n          return function () {\n            unsubscribe();\n          };\n        }\n      });\n      return function getMessages() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    getMessages();\n  }, [userLogged, chosenUser]);\n  var _onSend = useCallback(_asyncToGenerator(function* () {\n    var newMessages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var messagesRef = chatRoomDocRef ? collection(database, \"chat_rooms/\" + chatRoomDocRef.id + \"/messages\") : null;\n    if (messagesRef) {\n      var isStakeholder = !!userLogged.StakeholderId;\n      setisStackhold(isStackholder);\n      var promises = newMessages.map(function (message) {\n        var createdAt = new Date();\n        var messageData = {\n          _id: uuidv4(),\n          text: message.text,\n          createdAt: createdAt,\n          user: {\n            _id: isStackholder ? \"99\" + userLogged.StakeholderId : userLogged.traveler_id,\n            avatar: isStackholder ? userLogged.picture : userLogged.Picture\n          }\n        };\n        setMessages(function (previousMessages) {\n          return GiftedChat.append(previousMessages, messageData);\n        });\n        handlePushNotification(messageData, chosenUser.token);\n        console.log(\"*********\", chosenUser);\n        return addDoc(messagesRef, messageData);\n      });\n      Promise.all(promises).then(function () {\n        console.log('Messages sent');\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }), [userLogged, chosenUser, chatRoomDocRef]);\n  var handlePushNotification = function () {\n    var _ref4 = _asyncToGenerator(function* (message, recipientToken) {\n      var notification = {\n        to: recipientToken,\n        title: \"New message from  \",\n        body: message.text,\n        data: {\n          chatRoomDocRefId: chatRoomDocRef.id\n        }\n      };\n      fetch('http://cgroup90@194.90.158.74/cgroup90/prod/sendpushnotification', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(notification)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data);\n      }).catch(function (error) {\n        console.error(error);\n        Alert.alert('Error', error);\n      });\n    });\n    return function handlePushNotification(_x, _x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsx(GradientBackground, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.row,\n        children: [_jsx(View, {\n          style: styles.back,\n          children: _jsx(BackButton, {})\n        }), _jsx(View, {\n          style: styles.user,\n          children: _jsx(Image, {\n            style: styles.img,\n            source: {\n              uri: chosenUser.Picture\n            }\n          })\n        }), _jsx(View, {\n          style: styles.user,\n          children: _jsxs(Text, {\n            style: styles.text,\n            children: [chosenUser.FullName, \"  \"]\n          })\n        })]\n      }), messages && _jsx(GiftedChat, {\n        isTyping: true,\n        showAvatarForEveryMessage: true,\n        messages: messages,\n        onSend: function onSend(messages) {\n          return _onSend(messages);\n        },\n        user: {\n          _id: isStackholder ? \"99\" + userLogged.StakeholderId : userLogged.traveler_id,\n          avatar: isStackholder ? userLogged.picture : userLogged.Picture\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginBottom: 30\n  },\n  back: {\n    paddingTop: 30,\n    marginLeft: 20\n  },\n  img: {\n    height: 40,\n    width: 40,\n    borderRadius: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: 10\n  },\n  text: {\n    fontSize: 16,\n    top: 0,\n    fontWeight: 'bold',\n    fontSize: 25\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    width: '100%'\n  },\n  user: {\n    left: 20,\n    top: 20\n  }\n});","map":{"version":3,"names":["React","useLayoutEffect","useEffect","useCallback","useState","useRef","GiftedChat","StyleSheet","Text","View","TouchableOpacity","Image","collection","doc","addDoc","query","where","getDocs","orderBy","onSnapshot","push","ref","signOut","auth","database","useNavigation","GradientBackground","BackButton","v4","uuidv4","async","jsx","_jsx","jsxs","_jsxs","ChatWithSH","props","navigation","_useState","_useState2","_slicedToArray","messages","setMessages","chosenUser","route","params","user","userLogged","loggeduser","_useState3","_useState4","chatRoomDocRef","setChatRoomDocRef","_useState5","_useState6","shouldRender","setShouldRender","_useState7","_useState8","isStackholder","setisStackhold","console","log","onSignOut","catch","error","setOptions","headerRight","style","marginRight","onPress","children","createChatRoom","_ref","_asyncToGenerator","sortedUsers","StakeholderId","traveler_id","sort","chatRoomQuery","chatRoomQuerySnapshot","size","existingChatRoomRef","docs","messagesRef","id","q","unsubscribe","querySnapshot","map","data","_id","createdAt","toDate","text","newChatRoomDocRef","users","apply","arguments","getMessages","_ref2","isNewChatRoom","onSend","newMessages","length","undefined","isStakeholder","promises","message","Date","messageData","avatar","picture","Picture","previousMessages","append","handlePushNotification","token","Promise","all","then","_ref4","recipientToken","notification","to","title","body","chatRoomDocRefId","fetch","method","headers","JSON","stringify","response","json","Alert","alert","_x","_x2","styles","container","row","back","img","source","uri","FullName","isTyping","showAvatarForEveryMessage","create","flex","marginBottom","paddingTop","marginLeft","height","width","borderRadius","alignItems","justifyContent","fontSize","top","fontWeight","flexDirection","backgroundColor","left"],"sources":["C:/Users/97250/Desktop/פרויקט גמר/roadranger_1/client/travelersSide/Screens/ChatWithSH.jsx"],"sourcesContent":["import React, { useLayoutEffect, useEffect, useCallback, useState, useRef } from \"react\";\r\nimport { GiftedChat } from 'react-native-gifted-chat'\r\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native';\r\nimport { collection, doc, addDoc, query, where, getDocs, orderBy, onSnapshot, push, ref } from 'firebase/firestore';\r\nimport { signOut } from 'firebase/auth'\r\nimport { auth, database } from '../firebase'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport GradientBackground from '../Components/GradientBackground';\r\nimport BackButton from \"../Components/BackButton\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n//import * as Notifications from 'expo-notifications';\r\nimport { async } from \"@firebase/util\";\r\n\r\nexport default function ChatWithSH(props) {\r\n\r\n    const navigation = useNavigation();\r\n    const [messages, setMessages] = useState([]);\r\n    const chosenUser = props.route.params.user;\r\n    const userLogged = props.route.params.loggeduser;\r\n    const [chatRoomDocRef, setChatRoomDocRef] = useState('')\r\n    const [shouldRender, setShouldRender] = useState(false); // add state variable\r\nconst [isStackholder, setisStackhold] = useState(false);\r\n\r\n    console.log('im the logged user', userLogged);\r\n    console.log('im the chosen one!', chosenUser);\r\n\r\n    const onSignOut = () => {\r\n        signOut(auth).catch(error => console.log(error));\r\n    };\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            headerRight: () => (\r\n                <TouchableOpacity style={{ marginRight: 10 }} onPress={onSignOut}>\r\n                    <Text> Hi</Text>\r\n                </TouchableOpacity>\r\n            )\r\n        });\r\n    }, [navigation]);\r\n\r\n\r\n\r\n    const createChatRoom = async () => {\r\n        const sortedUsers = [`99${chosenUser.StakeholderId}`, userLogged.traveler_id].sort();\r\n        const chatRoomQuery = query(collection(database, 'chat_rooms'), where('users', '==', sortedUsers));\r\n        const chatRoomQuerySnapshot = await getDocs(chatRoomQuery);\r\n        if (chatRoomQuerySnapshot.size !== 0) {\r\n            const existingChatRoomRef = chatRoomQuerySnapshot.docs[0].ref;\r\n            setChatRoomDocRef(chatRoomQuerySnapshot.docs[0].ref);\r\n            console.log('Chat room exists');\r\n            const messagesRef = collection(database, 'chat_rooms', existingChatRoomRef.id, 'messages');\r\n            const q = query(messagesRef, orderBy('createdAt', 'desc'));\r\n            const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n                const messages = querySnapshot.docs.map(doc => {\r\n                    const data = doc.data();\r\n                    return {\r\n                        _id: uuidv4(),\r\n                        createdAt: data.createdAt.toDate(),\r\n                        text: data.text,\r\n                        user: data.user\r\n                    };\r\n                });\r\n                // console.log('Fetched messages:', messages); // add this line\r\n                setMessages(messages);\r\n                setShouldRender(false); // update state variable to trigger re-render\r\n            });\r\n            return false; // indicate that chat room already exists\r\n        } else {\r\n            const newChatRoomDocRef = await addDoc(collection(database, 'chat_rooms'), {\r\n                users: sortedUsers,\r\n                messages: []\r\n            });\r\n            setChatRoomDocRef(newChatRoomDocRef);\r\n            console.log('Chat room created');\r\n            return true; // indicate that new chat room was created\r\n        }\r\n    };\r\n\r\n    useLayoutEffect(() => {\r\n        const getMessages = async () => {\r\n            // Call createChatRoom() to make sure chat room exists\r\n            const isNewChatRoom = await createChatRoom();\r\n            if (!isNewChatRoom) {\r\n                // If a new chat room was created, do any necessary setup here\r\n                const messagesRef = collection(database, 'chat_rooms', chatRoomDocRef.id, 'messages');\r\n                const q = query(messagesRef, orderBy('createdAt', 'desc'));\r\n                const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n                    const messages = querySnapshot.docs.map(doc => {\r\n                        const data = doc.data();\r\n                        return {\r\n                            _id: uuidv4(),\r\n                            createdAt: data.createdAt.toDate(),\r\n                            text: data.text,\r\n                            user: data.user\r\n                        };\r\n                    });\r\n                    // console.log('Fetched messages:', messages); // add this line\r\n                    setMessages(messages);\r\n                    setShouldRender(false); // update state variable to trigger re-render\r\n                });\r\n\r\n                return () => {\r\n                    unsubscribe();\r\n                };\r\n            }\r\n        };\r\n\r\n        getMessages();\r\n    }, [userLogged, chosenUser]);\r\n\r\n\r\n    const onSend = useCallback(async (newMessages = []) => {\r\n        const messagesRef = chatRoomDocRef ? collection(database, `chat_rooms/${chatRoomDocRef.id}/messages`) : null;\r\n        if (messagesRef) {\r\n            const isStakeholder = !!userLogged.StakeholderId;\r\n            setisStackhold(isStackholder) // check if user is a stakeholder\r\n            const promises = newMessages.map((message) => {\r\n                const createdAt = new Date();\r\n                const messageData = {\r\n                    _id: uuidv4(), // add the generated ID to the message object\r\n                    text: message.text,\r\n                    createdAt: createdAt,\r\n                    user: {\r\n                        _id: isStackholder ? `99${userLogged.StakeholderId}` : userLogged.traveler_id,\r\n                        avatar: isStackholder ? userLogged.picture : userLogged.Picture\r\n                    }\r\n                };\r\n                setMessages((previousMessages) => GiftedChat.append(previousMessages, messageData));\r\n               handlePushNotification(messageData, chosenUser.token); // send push notification to the recipient\r\n                console.log(\"*********\", chosenUser)\r\n                return addDoc(messagesRef, messageData);\r\n            });\r\n\r\n            Promise.all(promises)\r\n                .then(() => {\r\n                    console.log('Messages sent');\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                });\r\n        }\r\n    }, [userLogged, chosenUser, chatRoomDocRef]);\r\n\r\n\r\n    const handlePushNotification = async (message, recipientToken) => {\r\n        // Construct the message payload\r\n        const notification = {\r\n            to: recipientToken,\r\n            title: `New message from  `,\r\n            body: message.text,\r\n            data: { chatRoomDocRefId: chatRoomDocRef.id },\r\n        };\r\n\r\n        // Send the notification to the recipient         \r\n        fetch('http://cgroup90@194.90.158.74/cgroup90/prod/sendpushnotification', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(notification),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n                Alert.alert('Error', error);\r\n            });\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <GradientBackground>\r\n            <View style={styles.container}>\r\n                <View style={styles.row}>\r\n                    <View style={styles.back}>\r\n                        <BackButton />\r\n                    </View >\r\n                    <View style={styles.user}>\r\n                        <Image style={styles.img} source={{ uri: chosenUser.Picture }} />\r\n                    </View>\r\n                    <View style={styles.user}>\r\n                        <Text style={styles.text}>{chosenUser.FullName}  </Text>\r\n                    </View>\r\n                </View>\r\n              \r\n                {messages && (\r\n                    <GiftedChat\r\n                        isTyping={true}\r\n                        showAvatarForEveryMessage={true}\r\n                        messages={messages}\r\n                        onSend={messages => onSend(messages)}\r\n                        user={{\r\n                            _id: isStackholder ? `99${userLogged.StakeholderId}` : userLogged.traveler_id,\r\n                            avatar: isStackholder ? userLogged.picture : userLogged.Picture\r\n                        }}\r\n                    />\r\n                )}\r\n\r\n            </View>\r\n        </GradientBackground>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        // backgroundColor: '#fff',\r\n        // marginTop: 40,\r\n        marginBottom: 30\r\n    },\r\n    back: {\r\n        paddingTop: 30,\r\n        marginLeft: 20\r\n    },\r\n    img: {\r\n        height: 40,\r\n        width: 40,\r\n        borderRadius: 20,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginRight: 10,\r\n    },\r\n    text: {\r\n        fontSize: 16,\r\n        top: 0,\r\n        fontWeight: 'bold',\r\n        fontSize: 25\r\n\r\n    },\r\n    row: {\r\n\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        backgroundColor: 'white',\r\n        width: '100%',\r\n        // margin: 5\r\n    },\r\n    user: {\r\n        left: 20,\r\n        top: 20,\r\n\r\n\r\n    }\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}