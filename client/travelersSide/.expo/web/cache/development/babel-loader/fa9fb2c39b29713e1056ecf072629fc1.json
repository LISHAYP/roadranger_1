{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport dayjs from 'dayjs';\nimport Color from \"./Color\";\nimport { TIME_FORMAT } from \"./Constant\";\nimport { StylePropType } from \"./utils\";\nimport { useChatContext } from \"./GiftedChatContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar _StyleSheet$create = StyleSheet.create({\n    containerStyle: {\n      marginLeft: 10,\n      marginRight: 10,\n      marginBottom: 5\n    }\n  }),\n  containerStyle = _StyleSheet$create.containerStyle;\nvar _StyleSheet$create2 = StyleSheet.create({\n    textStyle: {\n      fontSize: 10,\n      backgroundColor: 'transparent',\n      textAlign: 'right'\n    }\n  }),\n  textStyle = _StyleSheet$create2.textStyle;\nvar styles = {\n  left: StyleSheet.create({\n    container: _objectSpread({}, containerStyle),\n    text: _objectSpread({\n      color: Color.timeTextColor\n    }, textStyle)\n  }),\n  right: StyleSheet.create({\n    container: _objectSpread({}, containerStyle),\n    text: _objectSpread({\n      color: Color.white\n    }, textStyle)\n  })\n};\nexport function Time(_ref) {\n  var _ref$position = _ref.position,\n    position = _ref$position === void 0 ? 'left' : _ref$position,\n    containerStyle = _ref.containerStyle,\n    currentMessage = _ref.currentMessage,\n    _ref$timeFormat = _ref.timeFormat,\n    timeFormat = _ref$timeFormat === void 0 ? TIME_FORMAT : _ref$timeFormat,\n    timeTextStyle = _ref.timeTextStyle;\n  var _useChatContext = useChatContext(),\n    getLocale = _useChatContext.getLocale;\n  if (currentMessage == null) {\n    return null;\n  }\n  return _jsx(View, {\n    style: [styles[position].container, containerStyle && containerStyle[position]],\n    children: _jsx(Text, {\n      style: [styles[position].text, timeTextStyle && timeTextStyle[position]],\n      children: dayjs(currentMessage.createdAt).locale(getLocale()).format(timeFormat)\n    })\n  });\n}\nTime.propTypes = {\n  position: PropTypes.oneOf(['left', 'right']),\n  currentMessage: PropTypes.object,\n  containerStyle: PropTypes.shape({\n    left: StylePropType,\n    right: StylePropType\n  }),\n  timeFormat: PropTypes.string,\n  timeTextStyle: PropTypes.shape({\n    left: StylePropType,\n    right: StylePropType\n  })\n};","map":{"version":3,"sources":["../src/Time.tsx"],"names":[],"mappings":";;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,OAAO,SAAS,MAAM,YAAY;AAAA,OAAA,UAAA;AAAA,OAAA,IAAA;AAAA,OAAA,IAAA;AAElC,OAAO,KAAK,MAAM,OAAO;AAEzB,OAAO,KAAK;AACZ,SAAS,WAAW;AAEpB,SAAS,aAAa;AACtB,SAAS,cAAc;AAA6B,SAAA,GAAA,IAAA,IAAA;AAEpD,IAAA,kBAAA,GAA2B,UAAU,CAAC,MAAM,CAAC;IAC3C,cAAc,EAAE;MACd,UAAU,EAAE,EAAE;MACd,WAAW,EAAE,EAAE;MACf,YAAY,EAAE;IACf;GACF,CAAC;EANM,cAAc,GAAA,kBAAA,CAAd,cAAc;AAOtB,IAAA,mBAAA,GAAsB,UAAU,CAAC,MAAM,CAAC;IACtC,SAAS,EAAE;MACT,QAAQ,EAAE,EAAE;MACZ,eAAe,EAAE,aAAa;MAC9B,SAAS,EAAE;IACZ;GACF,CAAC;EANM,SAAS,GAAA,mBAAA,CAAT,SAAS;AAQjB,IAAM,MAAM,GAAG;EACb,IAAI,EAAE,UAAU,CAAC,MAAM,CAAC;IACtB,SAAS,EAAA,aAAA,KACJ,cAAc,CAClB;IACD,IAAI,EAAA,aAAA;MACF,KAAK,EAAE,KAAK,CAAC;IAAa,GACvB,SAAS;GAEf,CAAC;EACF,KAAK,EAAE,UAAU,CAAC,MAAM,CAAC;IACvB,SAAS,EAAA,aAAA,KACJ,cAAc,CAClB;IACD,IAAI,EAAA,aAAA;MACF,KAAK,EAAE,KAAK,CAAC;IAAK,GACf,SAAS;GAEf;CACF;AAUD,OAAM,SAAU,IAAI,CAAA,IAAA,EAME;EAAA,IAAA,aAAA,GAAA,IAAA,CALpB,QAAQ;IAAR,QAAQ,GAAA,aAAA,cAAG,MAAM,GAAA,aAAA;IACjB,cAAc,GAAA,IAAA,CAAd,cAAc;IACd,cAAc,GAAA,IAAA,CAAd,cAAc;IAAA,eAAA,GAAA,IAAA,CACd,UAAU;IAAV,UAAU,GAAA,eAAA,cAAG,WAAW,GAAA,eAAA;IACxB,aAAa,GAAA,IAAA,CAAb,aAAa;EAEb,IAAA,eAAA,GAAsB,cAAc,EAAE;IAA9B,SAAS,GAAA,eAAA,CAAT,SAAS;EACjB,IAAI,cAAc,IAAI,IAAI,EAAE;IAC1B,OAAO,IAAI;EACZ;EAED,OACE,IAAA,CAAC,IAAI;IACH,KAAK,EAAE,CACL,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAC1B,cAAc,IAAI,cAAc,CAAC,QAAQ,CAAC,CAC1C;IAAA,QAAA,EAEF,IAAA,CAAC,IAAI;MACH,KAAK,EAAE,CACL,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,EACrB,aAAa,IAAI,aAAa,CAAC,QAAQ,CAAC,CACxC;MAAA,QAAA,EAED,KAAK,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,UAAU;IAAC;EAE3E,EAAO;AAEX;AAEA,IAAI,CAAC,SAAS,GAAG;EACf,QAAQ,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;EAC5C,cAAc,EAAE,SAAS,CAAC,MAAM;EAChC,cAAc,EAAE,SAAS,CAAC,KAAK,CAAC;IAC9B,IAAI,EAAE,aAAa;IACnB,KAAK,EAAE;GACR,CAAC;EACF,UAAU,EAAE,SAAS,CAAC,MAAM;EAC5B,aAAa,EAAE,SAAS,CAAC,KAAK,CAAC;IAC7B,IAAI,EAAE,aAAa;IACnB,KAAK,EAAE;GACR;CACF","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, View } from 'react-native';\nimport dayjs from 'dayjs';\nimport Color from './Color';\nimport { TIME_FORMAT } from './Constant';\nimport { StylePropType } from './utils';\nimport { useChatContext } from './GiftedChatContext';\nconst { containerStyle } = StyleSheet.create({\n    containerStyle: {\n        marginLeft: 10,\n        marginRight: 10,\n        marginBottom: 5,\n    },\n});\nconst { textStyle } = StyleSheet.create({\n    textStyle: {\n        fontSize: 10,\n        backgroundColor: 'transparent',\n        textAlign: 'right',\n    },\n});\nconst styles = {\n    left: StyleSheet.create({\n        container: {\n            ...containerStyle,\n        },\n        text: {\n            color: Color.timeTextColor,\n            ...textStyle,\n        },\n    }),\n    right: StyleSheet.create({\n        container: {\n            ...containerStyle,\n        },\n        text: {\n            color: Color.white,\n            ...textStyle,\n        },\n    }),\n};\nexport function Time({ position = 'left', containerStyle, currentMessage, timeFormat = TIME_FORMAT, timeTextStyle, }) {\n    const { getLocale } = useChatContext();\n    if (currentMessage == null) {\n        return null;\n    }\n    return (<View style={[\n            styles[position].container,\n            containerStyle && containerStyle[position],\n        ]}>\n      <Text style={[\n            styles[position].text,\n            timeTextStyle && timeTextStyle[position],\n        ]}>\n        {dayjs(currentMessage.createdAt).locale(getLocale()).format(timeFormat)}\n      </Text>\n    </View>);\n}\nTime.propTypes = {\n    position: PropTypes.oneOf(['left', 'right']),\n    currentMessage: PropTypes.object,\n    containerStyle: PropTypes.shape({\n        left: StylePropType,\n        right: StylePropType,\n    }),\n    timeFormat: PropTypes.string,\n    timeTextStyle: PropTypes.shape({\n        left: StylePropType,\n        right: StylePropType,\n    }),\n};\n//# sourceMappingURL=Time.js.map"]},"metadata":{},"sourceType":"module"}