{"ast":null,"code":"import PropTypes from 'prop-types';\nimport React from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Color from \"./Color\";\nimport { StylePropType } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    marginTop: 5,\n    marginBottom: 10\n  },\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: Color.defaultColor,\n    borderRadius: 15,\n    height: 30,\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  text: {\n    backgroundColor: Color.backgroundTransparent,\n    color: Color.white,\n    fontSize: 12\n  },\n  activityIndicator: {\n    marginTop: Platform.select({\n      ios: -14,\n      android: -16,\n      default: -15\n    })\n  }\n});\nexport function LoadEarlier(_ref) {\n  var _ref$isLoadingEarlier = _ref.isLoadingEarlier,\n    isLoadingEarlier = _ref$isLoadingEarlier === void 0 ? false : _ref$isLoadingEarlier,\n    _ref$onLoadEarlier = _ref.onLoadEarlier,\n    onLoadEarlier = _ref$onLoadEarlier === void 0 ? function () {} : _ref$onLoadEarlier,\n    _ref$label = _ref.label,\n    label = _ref$label === void 0 ? 'Load earlier messages' : _ref$label,\n    containerStyle = _ref.containerStyle,\n    wrapperStyle = _ref.wrapperStyle,\n    textStyle = _ref.textStyle,\n    _ref$activityIndicato = _ref.activityIndicatorColor,\n    activityIndicatorColor = _ref$activityIndicato === void 0 ? 'white' : _ref$activityIndicato,\n    _ref$activityIndicato2 = _ref.activityIndicatorSize,\n    activityIndicatorSize = _ref$activityIndicato2 === void 0 ? 'small' : _ref$activityIndicato2,\n    activityIndicatorStyle = _ref.activityIndicatorStyle;\n  return _jsx(TouchableOpacity, {\n    style: [styles.container, containerStyle],\n    onPress: onLoadEarlier,\n    disabled: isLoadingEarlier,\n    accessibilityRole: \"button\",\n    children: _jsx(View, {\n      style: [styles.wrapper, wrapperStyle],\n      children: isLoadingEarlier ? _jsxs(View, {\n        children: [_jsx(Text, {\n          style: [styles.text, textStyle, {\n            opacity: 0\n          }],\n          children: label\n        }), _jsx(ActivityIndicator, {\n          color: activityIndicatorColor,\n          size: activityIndicatorSize,\n          style: [styles.activityIndicator, activityIndicatorStyle]\n        })]\n      }) : _jsx(Text, {\n        style: [styles.text, textStyle],\n        children: label\n      })\n    })\n  });\n}\nLoadEarlier.propTypes = {\n  onLoadEarlier: PropTypes.func,\n  isLoadingEarlier: PropTypes.bool,\n  label: PropTypes.string,\n  containerStyle: StylePropType,\n  wrapperStyle: StylePropType,\n  textStyle: StylePropType,\n  activityIndicatorStyle: StylePropType,\n  activityIndicatorColor: PropTypes.string,\n  activityIndicatorSize: PropTypes.string\n};","map":{"version":3,"sources":["../src/LoadEarlier.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { ActivityIndicator, Platform, StyleSheet, Text, TouchableOpacity, View, } from 'react-native';\nimport Color from './Color';\nimport { StylePropType } from './utils';\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        marginTop: 5,\n        marginBottom: 10,\n    },\n    wrapper: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: Color.defaultColor,\n        borderRadius: 15,\n        height: 30,\n        paddingLeft: 10,\n        paddingRight: 10,\n    },\n    text: {\n        backgroundColor: Color.backgroundTransparent,\n        color: Color.white,\n        fontSize: 12,\n    },\n    activityIndicator: {\n        marginTop: Platform.select({\n            ios: -14,\n            android: -16,\n            default: -15,\n        }),\n    },\n});\nexport function LoadEarlier({ isLoadingEarlier = false, onLoadEarlier = () => { }, label = 'Load earlier messages', containerStyle, wrapperStyle, textStyle, activityIndicatorColor = 'white', activityIndicatorSize = 'small', activityIndicatorStyle, }) {\n    return (<TouchableOpacity style={[styles.container, containerStyle]} onPress={onLoadEarlier} disabled={isLoadingEarlier} accessibilityRole='button'>\n      <View style={[styles.wrapper, wrapperStyle]}>\n        {isLoadingEarlier ? (<View>\n            <Text style={[styles.text, textStyle, { opacity: 0 }]}>\n              {label}\n            </Text>\n            <ActivityIndicator color={activityIndicatorColor} size={activityIndicatorSize} style={[styles.activityIndicator, activityIndicatorStyle]}/>\n          </View>) : (<Text style={[styles.text, textStyle]}>{label}</Text>)}\n      </View>\n    </TouchableOpacity>);\n}\nLoadEarlier.propTypes = {\n    onLoadEarlier: PropTypes.func,\n    isLoadingEarlier: PropTypes.bool,\n    label: PropTypes.string,\n    containerStyle: StylePropType,\n    wrapperStyle: StylePropType,\n    textStyle: StylePropType,\n    activityIndicatorStyle: StylePropType,\n    activityIndicatorColor: PropTypes.string,\n    activityIndicatorSize: PropTypes.string,\n};\n//# sourceMappingURL=LoadEarlier.js.map"]},"metadata":{},"sourceType":"module"}